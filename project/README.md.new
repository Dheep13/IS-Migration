# IT Resonance Integration Flow Analyzer

A modern web application for analyzing MuleSoft integration flows and finding SAP Integration Suite equivalents. This frontend application works in conjunction with the Python backend to provide a seamless user experience.

## Key Features

- **MuleSoft Analysis**: Upload and analyze MuleSoft XML files to understand their structure and components
- **Documentation Generation**: Create comprehensive documentation with flow diagrams and component descriptions
- **SAP Integration Suite Mapping**: Automatically find equivalent components in SAP Integration Suite
- **API/iFlow Generation**: Generate SAP API and iFlow definitions based on MuleSoft configurations
- **SAP BTP Integration**: Deploy generated artifacts directly to SAP Integration Suite

## Deployment to SAP BTP Cloud Foundry

### Prerequisites

1. SAP BTP Cloud Foundry account with appropriate entitlements
2. Cloud Foundry CLI installed and configured
3. Node.js (v16+) and npm installed
4. Backend API deployed and accessible

### Deployment Process

#### 1. Build the Production Version

```bash
# Install dependencies
npm install

# Build the production version
npm run build
```

#### 2. Configure API Endpoint

Ensure your production API endpoint is correctly configured in `.env.production`:

```
REACT_APP_API_URL=https://your-backend-api.cfapps.region.hana.ondemand.com/api
VITE_API_URL=https://your-backend-api.cfapps.region.hana.ondemand.com/api
```

#### 3. Deploy to Cloud Foundry

```bash
# Login to Cloud Foundry
cf login -a https://api.cf.region.hana.ondemand.com

# Deploy the application
cf push -f frontend-manifest.yml
```

### Deployment Scripts

For convenience, use the provided deployment scripts:

**On Linux/macOS:**
```bash
# Make the script executable
chmod +x deploy.sh

# Run the deployment script
./deploy.sh
```

**On Windows:**
```bash
# Run the deployment script
deploy.bat
```

## Troubleshooting

### CORS Issues

If you encounter CORS issues:

1. Verify backend API CORS configuration:
   ```
   Access-Control-Allow-Origin: https://your-frontend-app.cfapps.region.hana.ondemand.com
   Access-Control-Allow-Methods: GET, POST, OPTIONS
   Access-Control-Allow-Headers: Content-Type, Authorization
   ```

2. Check that the frontend is using the correct API URL in the network tab of browser dev tools

3. Ensure Cloud Foundry routes are correctly configured:
   ```bash
   cf routes
   ```

### Static Content Issues

If static content (CSS, JS) fails to load:

1. Check the Staticfile configuration
2. Verify the build process completed successfully
3. Ensure the correct buildpack is being used

## Local Development

For local development:

```bash
# Install dependencies
npm install

# Start the development server
npm run dev
```

The application will be available at http://localhost:5173 by default.

## License

Â© 2024 IT Resonance. All rights reserved.
