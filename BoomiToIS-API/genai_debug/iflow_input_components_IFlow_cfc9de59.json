{
  "api_name": "Financial Services Cloud Wealth Management API",
  "base_url": "/api/v1",
  "endpoints": [
    {
      "method": "POST",
      "path": "/InvestmentAccounts/Initiate",
      "purpose": "Creates a new investment account with beneficiaries",
      "components": [
        {
          "type": "enricher",
          "name": "Prepare_Account_Request",
          "id": "enricher_account_request_1",
          "config": {
            "content": "Prepares the investment account request for processing"
          }
        },
        {
          "type": "groovy_script",
          "name": "Generate_Beneficiary_IDs",
          "id": "script_generate_beneficiary_ids_1",
          "config": {
            "script": "GenerateBeneficiaryIDs.groovy"
          }
        },
        {
          "type": "enricher",
          "name": "Format_Account_Response",
          "id": "enricher_account_response_1",
          "config": {
            "content": "Formats the response with created beneficiaries and their IDs"
          }
        }
      ],
      "sequence": [
        "enricher_account_request_1",
        "script_generate_beneficiary_ids_1",
        "enricher_account_response_1"
      ],
      "transformations": [
        {
          "name": "GenerateBeneficiaryIDs.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef jsonSlurper = new JsonSlurper()\ndef payload = jsonSlurper.parseText(message.getBody(String.class))\n\ndef bfr = \"BFR-\"\ndef random = new Random()\ndef generateId = { -> bfr + (1..7).collect { random.nextInt(10) }.join('') }\n\ndef accountsData = payload.InvestmentAccounts\n\nif (accountsData.Beneficiaries.Primary) {\n    accountsData.Beneficiaries.Primary.each { beneficiary ->\n        beneficiary.BeneficiaryId = generateId()\n    }\n}\n\nif (accountsData.Beneficiaries.Contingent) {\n    accountsData.Beneficiaries.Contingent.each { beneficiary ->\n        beneficiary.BeneficiaryId = generateId()\n    }\n}\n\ndef jsonBuilder = new JsonBuilder(payload)\nreturn jsonBuilder.toString()"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_account_request_1",
          "target": "script_generate_beneficiary_ids_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_account_request_1\" targetRef=\"script_generate_beneficiary_ids_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "script_generate_beneficiary_ids_1",
          "target": "enricher_account_response_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"script_generate_beneficiary_ids_1\" targetRef=\"enricher_account_response_1\" isImmediate=\"true\"/>"
        }
      ]
    },
    {
      "method": "PATCH",
      "path": "/InvestmentAccounts/Update",
      "purpose": "Updates existing beneficiaries for investment accounts",
      "components": [
        {
          "type": "enricher",
          "name": "Prepare_Update_Request",
          "id": "enricher_update_request_1",
          "config": {
            "content": "Prepares the update request for processing"
          }
        },
        {
          "type": "groovy_script",
          "name": "Update_Beneficiaries",
          "id": "script_update_beneficiaries_1",
          "config": {
            "script": "UpdateBeneficiaries.groovy"
          }
        },
        {
          "type": "enricher",
          "name": "Format_Update_Response",
          "id": "enricher_update_response_1",
          "config": {
            "content": "Formats the response with updated beneficiaries"
          }
        }
      ],
      "sequence": [
        "enricher_update_request_1",
        "script_update_beneficiaries_1",
        "enricher_update_response_1"
      ],
      "transformations": [
        {
          "name": "UpdateBeneficiaries.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef jsonSlurper = new JsonSlurper()\ndef payload = jsonSlurper.parseText(message.getBody(String.class))\n\ndef bfr = \"BFR-\"\ndef random = new Random()\ndef generateId = { -> bfr + (1..7).collect { random.nextInt(10) }.join('') }\n\ndef accountsData = payload.InvestmentAccounts\n\nif (accountsData.Beneficiaries.Primary) {\n    accountsData.Beneficiaries.Primary.each { beneficiary ->\n        if (!beneficiary.BeneficiaryId) {\n            beneficiary.BeneficiaryId = generateId()\n        }\n    }\n}\n\nif (accountsData.Beneficiaries.Contingent) {\n    accountsData.Beneficiaries.Contingent.each { beneficiary ->\n        if (!beneficiary.BeneficiaryId) {\n            beneficiary.BeneficiaryId = generateId()\n        }\n    }\n}\n\ndef jsonBuilder = new JsonBuilder(payload)\nreturn jsonBuilder.toString()"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_update_request_1",
          "target": "script_update_beneficiaries_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_update_request_1\" targetRef=\"script_update_beneficiaries_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "script_update_beneficiaries_1",
          "target": "enricher_update_response_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"script_update_beneficiaries_1\" targetRef=\"enricher_update_response_1\" isImmediate=\"true\"/>"
        }
      ]
    },
    {
      "method": "DELETE",
      "path": "/InvestmentAccounts/Delete",
      "purpose": "Deletes beneficiaries from investment accounts",
      "components": [
        {
          "type": "enricher",
          "name": "Prepare_Delete_Request",
          "id": "enricher_delete_request_1",
          "config": {
            "content": "Prepares the delete request for processing"
          }
        },
        {
          "type": "groovy_script",
          "name": "Delete_Beneficiaries",
          "id": "script_delete_beneficiaries_1",
          "config": {
            "script": "DeleteBeneficiaries.groovy"
          }
        },
        {
          "type": "enricher",
          "name": "Format_Delete_Response",
          "id": "enricher_delete_response_1",
          "config": {
            "content": "Formats the response with deleted beneficiaries status"
          }
        }
      ],
      "sequence": [
        "enricher_delete_request_1",
        "script_delete_beneficiaries_1",
        "enricher_delete_response_1"
      ],
      "transformations": [
        {
          "name": "DeleteBeneficiaries.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef jsonSlurper = new JsonSlurper()\ndef payload = jsonSlurper.parseText(message.getBody(String.class))\n\ndef accountsData = payload.InvestmentAccounts\ndef response = [InvestmentAccounts: [:]]\n\nresponse.InvestmentAccounts.AccountIds = accountsData.AccountIds\nresponse.InvestmentAccounts.Beneficiaries = accountsData.Beneficiaries.collect { beneficiary ->\n    [BeneficiaryId: beneficiary.BeneficiaryId, Status: \"DELETED\"]\n}\n\ndef jsonBuilder = new JsonBuilder(response)\nreturn jsonBuilder.toString()"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_delete_request_1",
          "target": "script_delete_beneficiaries_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_delete_request_1\" targetRef=\"script_delete_beneficiaries_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "script_delete_beneficiaries_1",
          "target": "enricher_delete_response_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"script_delete_beneficiaries_1\" targetRef=\"enricher_delete_response_1\" isImmediate=\"true\"/>"
        }
      ]
    },
    {
      "method": "GET",
      "path": "/InvestmentAccounts/{accountId}/Retrieve",
      "purpose": "Retrieves details of a specific investment account, including beneficiaries",
      "components": [
        {
          "type": "enricher",
          "name": "Prepare_Retrieve_Request",
          "id": "enricher_retrieve_request_1",
          "config": {
            "content": "Prepares the retrieve request with account ID"
          }
        },
        {
          "type": "odata",
          "name": "Get_Account_Details",
          "id": "odata_get_account_1",
          "config": {
            "address": "https://financial-services-cloud.example.com/odata/service",
            "resource_path": "InvestmentAccounts",
            "operation": "Query(GET)",
            "query_options": "$filter=AccountId eq '{accountId}'"
          }
        },
        {
          "type": "enricher",
          "name": "Format_Account_Details",
          "id": "enricher_account_details_1",
          "config": {
            "content": "Formats the account details response"
          }
        }
      ],
      "sequence": [
        "enricher_retrieve_request_1",
        "odata_get_account_1",
        "enricher_account_details_1"
      ],
      "transformations": [],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_retrieve_request_1",
          "target": "odata_get_account_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_retrieve_request_1\" targetRef=\"odata_get_account_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "odata_get_account_1",
          "target": "enricher_account_details_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"odata_get_account_1\" targetRef=\"enricher_account_details_1\" isImmediate=\"true\"/>"
        }
      ]
    },
    {
      "method": "POST",
      "path": "/InvestmentAccounts/{accountId}/Payments/Initiate",
      "purpose": "Creates new standing payment orders for an investment account",
      "components": [
        {
          "type": "enricher",
          "name": "Prepare_Payment_Request",
          "id": "enricher_payment_request_1",
          "config": {
            "content": "Prepares the payment request for processing"
          }
        },
        {
          "type": "groovy_script",
          "name": "Generate_Payment_IDs",
          "id": "script_generate_payment_ids_1",
          "config": {
            "script": "GeneratePaymentIDs.groovy"
          }
        },
        {
          "type": "request_reply",
          "name": "Create_Payment_Orders",
          "id": "request_reply_create_payment_1",
          "config": {
            "endpoint_path": "/services/payments/create"
          }
        },
        {
          "type": "enricher",
          "name": "Format_Payment_Response",
          "id": "enricher_payment_response_1",
          "config": {
            "content": "Formats the response with created payment orders"
          }
        }
      ],
      "sequence": [
        "enricher_payment_request_1",
        "script_generate_payment_ids_1",
        "request_reply_create_payment_1",
        "enricher_payment_response_1"
      ],
      "transformations": [
        {
          "name": "GeneratePaymentIDs.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\nimport java.time.Instant\n\ndef jsonSlurper = new JsonSlurper()\ndef payload = jsonSlurper.parseText(message.getBody(String.class))\n\ndef sot = \"PMT\"\ndef random = new Random()\ndef generateId = { -> sot + (1..7).collect { random.nextInt(10) }.join('') }\n\ndef paymentsData = payload.Payments\n\npaymentsData.each { payment ->\n    payment.PaymentId = generateId()\n    payment.CreationDateTime = Instant.now().toString()\n}\n\ndef jsonBuilder = new JsonBuilder(payload)\nreturn jsonBuilder.toString()"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_payment_request_1",
          "target": "script_generate_payment_ids_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_payment_request_1\" targetRef=\"script_generate_payment_ids_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_1",
          "source": "script_generate_payment_ids_1",
          "target": "request_reply_create_payment_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_1\" sourceRef=\"script_generate_payment_ids_1\" targetRef=\"request_reply_create_payment_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "request_reply_create_payment_1",
          "target": "enricher_payment_response_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"request_reply_create_payment_1\" targetRef=\"enricher_payment_response_1\" isImmediate=\"true\"/>"
        }
      ]
    },
    {
      "method": "PATCH",
      "path": "/InvestmentAccounts/{accountId}/Payments/Update",
      "purpose": "Cancels existing standing payment orders for an investment account",
      "components": [
        {
          "type": "enricher",
          "name": "Prepare_Cancel_Request",
          "id": "enricher_cancel_request_1",
          "config": {
            "content": "Prepares the cancel payment request"
          }
        },
        {
          "type": "groovy_script",
          "name": "Add_Cancel_Timestamp",
          "id": "script_add_cancel_timestamp_1",
          "config": {
            "script": "AddCancelTimestamp.groovy"
          }
        },
        {
          "type": "request_reply",
          "name": "Cancel_Payment_Orders",
          "id": "request_reply_cancel_payment_1",
          "config": {
            "endpoint_path": "/services/payments/cancel"
          }
        },
        {
          "type": "enricher",
          "name": "Format_Cancel_Response",
          "id": "enricher_cancel_response_1",
          "config": {
            "content": "Formats the cancel payment response"
          }
        }
      ],
      "sequence": [
        "enricher_cancel_request_1",
        "request_reply_cancel_payment_1",
        "script_add_cancel_timestamp_1",
        "enricher_cancel_response_1"
      ],
      "transformations": [
        {
          "name": "AddCancelTimestamp.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\nimport java.time.Instant\n\ndef jsonSlurper = new JsonSlurper()\ndef payload = jsonSlurper.parseText(message.getBody(String.class))\n\ndef response = [:]\nresponse.PaymentIds = payload.PaymentIds\nresponse.CancelDateTime = Instant.now().toString()\n\ndef jsonBuilder = new JsonBuilder(response)\nreturn jsonBuilder.toString()"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_cancel_request_1",
          "target": "script_add_cancel_timestamp_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_cancel_request_1\" targetRef=\"script_add_cancel_timestamp_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_1",
          "source": "script_add_cancel_timestamp_1",
          "target": "request_reply_cancel_payment_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_1\" sourceRef=\"script_add_cancel_timestamp_1\" targetRef=\"request_reply_cancel_payment_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "request_reply_cancel_payment_1",
          "target": "enricher_cancel_response_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"request_reply_cancel_payment_1\" targetRef=\"enricher_cancel_response_1\" isImmediate=\"true\"/>"
        }
      ]
    },
    {
      "method": "GET",
      "path": "/InvestmentAccounts/{accountId}/Payments/Retrieve",
      "purpose": "Retrieves standing payment orders for an investment account with optional filtering",
      "components": [
        {
          "type": "enricher",
          "name": "Prepare_Retrieve_Payments_Request",
          "id": "enricher_retrieve_payments_request_1",
          "config": {
            "content": "Prepares the retrieve payments request with filters"
          }
        },
        {
          "type": "odata",
          "name": "Get_Payment_Orders",
          "id": "odata_get_payments_1",
          "config": {
            "address": "https://financial-services-cloud.example.com/odata/service",
            "resource_path": "PaymentOrders",
            "operation": "Query(GET)",
            "query_options": "$filter=AccountId eq '{accountId}'"
          }
        },
        {
          "type": "groovy_script",
          "name": "Filter_Payment_Orders",
          "id": "script_filter_payments_1",
          "config": {
            "script": "FilterPaymentOrders.groovy"
          }
        },
        {
          "type": "enricher",
          "name": "Format_Payment_Orders_Response",
          "id": "enricher_payment_orders_response_1",
          "config": {
            "content": "Formats the payment orders response"
          }
        }
      ],
      "sequence": [
        "enricher_retrieve_payments_request_1",
        "odata_get_payments_1",
        "script_filter_payments_1",
        "enricher_payment_orders_response_1"
      ],
      "transformations": [
        {
          "name": "FilterPaymentOrders.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef jsonSlurper = new JsonSlurper()\ndef payload = jsonSlurper.parseText(message.getBody(String.class))\ndef properties = message.getProperties()\n\ndef paymentId = properties.get('paymentId')\ndef payeeName = properties.get('payeeName')\ndef amount = properties.get('amount')\n\ndef paymentOrders = payload.PaymentOrders\n\nif (paymentId) {\n    paymentOrders = paymentOrders.findAll { it.PaymentId.contains(paymentId) }\n}\n\nif (payeeName) {\n    paymentOrders = paymentOrders.findAll { it.Payments.PayeeReference.PayeeName.contains(payeeName) }\n}\n\nif (amount) {\n    paymentOrders = paymentOrders.findAll { it.Payments.PaymentDefinition.PaymentAmount.MaxAmount.contains(amount) }\n}\n\ndef response = [PaymentOrders: paymentOrders]\ndef jsonBuilder = new JsonBuilder(response)\nreturn jsonBuilder.toString()"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_retrieve_payments_request_1",
          "target": "odata_get_payments_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_retrieve_payments_request_1\" targetRef=\"odata_get_payments_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_1",
          "source": "odata_get_payments_1",
          "target": "script_filter_payments_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_1\" sourceRef=\"odata_get_payments_1\" targetRef=\"script_filter_payments_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "script_filter_payments_1",
          "target": "enricher_payment_orders_response_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"script_filter_payments_1\" targetRef=\"enricher_payment_orders_response_1\" isImmediate=\"true\"/>"
        }
      ]
    },
    {
      "method": "POST",
      "path": "/InvestmentAccounts/{accountId}/Acats",
      "purpose": "Initiates an ACATS (Automated Customer Account Transfer Service) transaction for an investment account",
      "components": [
        {
          "type": "enricher",
          "name": "Prepare_ACATS_Request",
          "id": "enricher_acats_request_1",
          "config": {
            "content": "Prepares the ACATS request for processing"
          }
        },
        {
          "type": "request_reply",
          "name": "Process_ACATS_Transaction",
          "id": "request_reply_acats_1",
          "config": {
            "endpoint_path": "/services/acats/process"
          }
        },
        {
          "type": "enricher",
          "name": "Format_ACATS_Response",
          "id": "enricher_acats_response_1",
          "config": {
            "content": "Formats the ACATS transaction response"
          }
        }
      ],
      "sequence": [
        "enricher_acats_request_1",
        "request_reply_acats_1",
        "enricher_acats_response_1"
      ],
      "transformations": [],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_acats_request_1",
          "target": "request_reply_acats_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_acats_request_1\" targetRef=\"request_reply_acats_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "request_reply_acats_1",
          "target": "enricher_acats_response_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"request_reply_acats_1\" targetRef=\"enricher_acats_response_1\" isImmediate=\"true\"/>"
        }
      ]
    },
    {
      "method": "POST",
      "path": "/InvestmentAccounts/{accountId}/RMD",
      "purpose": "Initiates a Required Minimum Distribution (RMD) transaction for an investment account",
      "components": [
        {
          "type": "enricher",
          "name": "Prepare_RMD_Request",
          "id": "enricher_rmd_request_1",
          "config": {
            "content": "Prepares the RMD request for processing"
          }
        },
        {
          "type": "request_reply",
          "name": "Process_RMD_Transaction",
          "id": "request_reply_rmd_1",
          "config": {
            "endpoint_path": "/services/rmd/process"
          }
        },
        {
          "type": "enricher",
          "name": "Format_RMD_Response",
          "id": "enricher_rmd_response_1",
          "config": {
            "content": "Formats the RMD transaction response"
          }
        }
      ],
      "sequence": [
        "enricher_rmd_request_1",
        "request_reply_rmd_1",
        "enricher_rmd_response_1"
      ],
      "transformations": [],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_rmd_request_1",
          "target": "request_reply_rmd_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_rmd_request_1\" targetRef=\"request_reply_rmd_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "request_reply_rmd_1",
          "target": "enricher_rmd_response_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"request_reply_rmd_1\" targetRef=\"enricher_rmd_response_1\" isImmediate=\"true\"/>"
        }
      ]
    },
    {
      "method": "PATCH",
      "path": "/customers/{customerId}",
      "purpose": "Updates customer profile information",
      "components": [
        {
          "type": "enricher",
          "name": "Prepare_Profile_Update_Request",
          "id": "enricher_profile_update_request_1",
          "config": {
            "content": "Prepares the profile update request"
          }
        },
        {
          "type": "odata",
          "name": "Update_Customer_Profile",
          "id": "odata_update_profile_1",
          "config": {
            "address": "https://financial-services-cloud.example.com/odata/service",
            "resource_path": "Customers('{customerId}')",
            "operation": "Update(PATCH)",
            "query_options": ""
          }
        },
        {
          "type": "enricher",
          "name": "Format_Profile_Update_Response",
          "id": "enricher_profile_update_response_1",
          "config": {
            "content": "Formats the profile update response"
          }
        }
      ],
      "sequence": [
        "enricher_profile_update_request_1",
        "odata_update_profile_1",
        "enricher_profile_update_response_1"
      ],
      "transformations": [],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_profile_update_request_1",
          "target": "odata_update_profile_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_profile_update_request_1\" targetRef=\"odata_update_profile_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "odata_update_profile_1",
          "target": "enricher_profile_update_response_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"odata_update_profile_1\" targetRef=\"enricher_profile_update_response_1\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}