{
    "process_name": "SuccessFactors to SFTP Integration with Error Handling",
    "description": "This integration facilitates the secure transfer of employee data from SAP SuccessFactors to an SFTP server with comprehensive error handling capabilities.",
    "endpoints": [
        {
            "method": "GET",
            "path": "/employee-data",
            "purpose": "Retrieves employee data from SuccessFactors, transforms it, and uploads to SFTP",
            "components": [
                {
                    "type": "request_reply",
                    "name": "Get_SuccessFactors_Employee_Data",
                    "id": "successfactors_connector",
                    "config": {
                        "endpoint_path": "/odata/v2/User",
                        "address": "https://api.successfactors.com"
                    }
                },
                {
                    "type": "groovy_script",
                    "name": "Transform_Canonical_To_Kafka_Avro",
                    "id": "canonical_to_kafka_transform",
                    "config": {
                        "script": "TransformCanonicalToKafkaAvro.groovy"
                    }
                },
                {
                    "type": "request_reply",
                    "name": "Upload_To_SFTP",
                    "id": "sftp_connector",
                    "config": {
                        "endpoint_path": "/employee-data/${date:now:yyyyMMdd}_employee_data.json",
                        "address": "sftp://sftp.example.com"
                    }
                },
                {
                    "type": "enricher",
                    "name": "Prepare_Success_Message",
                    "id": "success_message_enricher",
                    "config": {
                        "content": "{\"status\": \"success\", \"message\": \"Employee data successfully transferred to SFTP\", \"timestamp\": \"${date:now:yyyy-MM-dd'T'HH:mm:ss.SSS}\"}"
                    }
                }
            ],
            "error_handling": {
                "exception_subprocess": [
                    {
                        "type": "enricher",
                        "name": "Prepare_Error_Message",
                        "id": "error_message_enricher",
                        "trigger": "any_error",
                        "config": {
                            "content": "{\"status\": \"error\", \"message\": \"${exception.message}\", \"timestamp\": \"${date:now:yyyy-MM-dd'T'HH:mm:ss.SSS}\"}"
                        }
                    },
                    {
                        "type": "request_reply",
                        "name": "Send_Error_Notification",
                        "id": "error_notification_sender",
                        "trigger": "any_error",
                        "config": {
                            "endpoint_path": "/api/notifications/email",
                            "address": "https://notification-service.example.com"
                        }
                    }
                ]
            },
            "sequence": [
                "successfactors_connector",
                "canonical_to_kafka_transform",
                "sftp_connector",
                "success_message_enricher"
            ],
            "transformations": [
                {
                    "name": "TransformCanonicalToKafkaAvro.groovy",
                    "type": "groovy",
                    "script": "import groovy.json.*\n\ndef inputMessage = message.getBody(String.class)\ndef jsonSlurper = new JsonSlurper()\ndef data = jsonSlurper.parseText(inputMessage)\n\ndef result = [\n    \"Object\": [\n        \"batchProcessingDirectives\": [\n            \"Object\": [\n                \"accountID\": [\n                    \"Object\": [\n                        \"username\": data[9]\n                    ]\n                ],\n                \"batchProcessingOption\": [\n                    \"Array\": [\n                        \"ArrayElement1\": [\n                            \"Object\": [\n                                \"name\": data[118]\n                            ]\n                        ]\n                    ]\n                ]\n            ]\n        ],\n        \"batchContactList\": [\n            \"Array\": [\n                \"ArrayElement1\": [\n                    \"Object\": [\n                        \"contact\": [\n                            \"Array\": [\n                                \"ArrayElement1\": [\n                                    \"Object\": [\n                                        \"contactID\": data[91],\n                                        \"contactPointList\": [\n                                            \"Array\": [\n                                                \"ArrayElement1\": [\n                                                    \"Object\": [\n                                                        \"contactPoint\": [\n                                                            \"Array\": [\n                                                                \"ArrayElement1\": [\n                                                                    \"Object\": [\n                                                                        \"type\": data[111]\n                                                                    ]\n                                                                ]\n                                                            ]\n                                                        ]\n                                                    ]\n                                                ]\n                                            ]\n                                        ]\n                                    ]\n                                ]\n                            ]\n                        ]\n                    ]\n                ]\n            ]\n        ]\n    ]\n]\n\nmessage.setBody(JsonOutput.toJson(result))"
                }
            ]
        }
    ]
}