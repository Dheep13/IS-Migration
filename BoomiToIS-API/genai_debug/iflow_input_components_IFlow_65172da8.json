{
  "process_name": "Create Salesforce Opportunities from Stripe Subscriptions",
  "description": "This integration creates Salesforce Opportunities based on Stripe Subscription data by retrieving customer and product information from Stripe APIs and using this data to create properly formatted Opportunity records in Salesforce.",
  "endpoints": [
    {
      "method": "POST",
      "path": "/create-opportunity",
      "purpose": "Create Salesforce Opportunity from Stripe Subscription data",
      "components": [
        {
          "type": "enricher",
          "name": "Set_Opportunity_Properties",
          "id": "set_properties",
          "config": {
            "content": "DDP_CustomerName=${body.customer.name}\nDDP_Subscription=${body.product.name}\nDDP_SalesforceDescription=${property.DDP_CustomerName} has subscribed to: ${property.DDP_Subscription}\nDDP_CloseDate=${P.subtract(P.now(), P.months(3))}"
          }
        },
        {
          "type": "request_reply",
          "name": "Get_Stripe_Customer_Info",
          "id": "get_customer_info",
          "config": {
            "endpoint_path": "/customers/{customer_id}",
            "address": "https://api.stripe.com/v1"
          }
        },
        {
          "type": "request_reply",
          "name": "Get_Stripe_Product_Info",
          "id": "get_product_info",
          "config": {
            "endpoint_path": "/products/{product_id}",
            "address": "https://api.stripe.com/v1"
          }
        },
        {
          "type": "request_reply",
          "name": "Create_Salesforce_Opportunity",
          "id": "create_opportunity",
          "config": {
            "endpoint_path": "/services/data/v{version}/sobjects/Opportunity",
            "address": "https://{instance}.salesforce.com"
          }
        },
        {
          "type": "groovy_script",
          "name": "Transform_To_Salesforce_Opportunity",
          "id": "transform_data",
          "config": {
            "script": "TransformToOpportunity.groovy"
          }
        }
      ],
      "error_handling": {
        "exception_subprocess": [
          {
            "type": "enricher",
            "name": "Set_Error_Message",
            "id": "set_error_message",
            "trigger": "any_error",
            "config": {
              "content": "ErrorMessage=Error occurred during Stripe to Salesforce integration: ${exception.message}"
            }
          },
          {
            "type": "groovy_script",
            "name": "Log_Error_Details",
            "id": "log_error",
            "trigger": "any_error",
            "config": {
              "script": "LogErrorDetails.groovy"
            }
          }
        ]
      },
      "branching": {
        "type": "exclusive",
        "branches": [
          {
            "condition": "default",
            "components": [
              "get_customer_info",
              "get_product_info",
              "set_properties",
              "transform_data",
              "create_opportunity"
            ],
            "sequence": [
              "get_customer_info",
              "get_product_info",
              "set_properties",
              "transform_data",
              "create_opportunity"
            ]
          }
        ]
      },
      "sequence": [
        "get_customer_info",
        "get_product_info",
        "set_properties",
        "transform_data",
        "create_opportunity"
      ],
      "transformations": [
        {
          "name": "TransformToOpportunity.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef inputBody = message.getBody(String.class)\ndef jsonSlurper = new JsonSlurper()\ndef data = jsonSlurper.parseText(inputBody)\n\ndef opportunity = [\n    Name: data.subscription.name ?: \"Subscription from \" + property.DDP_CustomerName,\n    Description: property.DDP_SalesforceDescription,\n    CloseDate: property.DDP_CloseDate,\n    StageName: \"Closed Won\",\n    Amount: data.subscription.amount ?: 0,\n    AccountId: data.customer.accountId\n]\n\ndef jsonBuilder = new JsonBuilder(opportunity)\nreturn jsonBuilder.toString()"
        },
        {
          "name": "LogErrorDetails.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef errorDetails = [\n    timestamp: new Date().format(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"),\n    message: property.ErrorMessage,\n    exception: exception.message,\n    stackTrace: exception.stackTrace?.toString(),\n    component: exception.failedComponent\n]\n\ndef jsonBuilder = new JsonBuilder(errorDetails)\nreturn jsonBuilder.toString()"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "set_properties",
          "target": "get_customer_info",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"set_properties\" targetRef=\"get_customer_info\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_1",
          "source": "get_customer_info",
          "target": "get_product_info",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_1\" sourceRef=\"get_customer_info\" targetRef=\"get_product_info\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_2",
          "source": "get_product_info",
          "target": "create_opportunity",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_2\" sourceRef=\"get_product_info\" targetRef=\"create_opportunity\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "create_opportunity",
          "target": "transform_data",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"create_opportunity\" targetRef=\"transform_data\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}