{
  "process_name": "Stripe to Salesforce Opportunity Integration",
  "description": "This integration creates Salesforce Opportunities automatically when new customer subscriptions are created in Stripe. The integration listens for Stripe webhook events for new subscriptions, transforms the subscription data, and creates corresponding opportunity records in Salesforce.",
  "endpoints": [
    {
      "method": "POST",
      "path": "/webhook-listener",
      "purpose": "Receives webhook notifications from Stripe when new subscriptions are created",
      "components": [
        {
          "type": "enricher",
          "name": "Set_Dynamic_Properties",
          "id": "enricher_1",
          "config": {
            "content": "Sets dynamic document properties for the integration and prepares data for transformation to Salesforce format"
          }
        },
        {
          "type": "request_reply",
          "name": "Create_Salesforce_Opportunity",
          "id": "request_reply_1",
          "config": {
            "endpoint_path": "/services/data/v52.0/sobjects/Opportunity",
            "address": "https://{{Salesforce_URL}}"
          }
        },
        {
          "type": "groovy_script",
          "name": "Transform_Subscription_To_Opportunity",
          "id": "transform_1",
          "config": {
            "script": "TransformSubscriptionToOpportunity.groovy"
          }
        }
      ],
      "error_handling": {
        "exception_subprocess": [
          {
            "type": "enricher",
            "name": "Error_Message_Formatter",
            "id": "error_enricher_1",
            "trigger": "any_error",
            "config": {
              "content": "Error occurred during Stripe to Salesforce integration: ${exception.message}"
            }
          },
          {
            "type": "request_reply",
            "name": "Send_Error_Notification",
            "id": "error_notification_1",
            "trigger": "any_error",
            "config": {
              "endpoint_path": "/api/notifications/email"
            }
          }
        ]
      },
      "branching": {
        "type": "exclusive",
        "branches": [
          {
            "condition": "Default path",
            "components": [
              "enricher_1",
              "transform_1",
              "request_reply_1"
            ],
            "sequence": [
              "enricher_1",
              "transform_1",
              "request_reply_1"
            ]
          }
        ]
      },
      "sequence": [
        "enricher_1",
        "transform_1",
        "request_reply_1"
      ],
      "transformations": [
        {
          "name": "TransformSubscriptionToOpportunity.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef jsonSlurper = new JsonSlurper()\ndef input = jsonSlurper.parseText(message.getBody(String.class))\n\n// Extract subscription data\ndef subscription = input.data.object\ndef customer = subscription.customer\ndef plan = subscription.plan\n\n// Format opportunity data\ndef opportunityName = \"Subscription: \" + (plan.nickname ?: plan.id) + \" - \" + customer\ndef closeDate = new Date().format(\"yyyy-MM-dd\")\ndef amount = (plan.amount / 100).toString()\n\n// Create Salesforce Opportunity XML\ndef opportunityXml = \"<Opportunity>\\n\"\nopportunityXml += \"  <Name>\" + opportunityName + \"</Name>\\n\"\nopportunityXml += \"  <Description>Stripe subscription created on \" + subscription.created + \"</Description>\\n\"\nopportunityXml += \"  <CloseDate>\" + closeDate + \"</CloseDate>\\n\"\nopportunityXml += \"  <Amount>\" + amount + \"</Amount>\\n\"\nopportunityXml += \"  <StageName>Closed Won</StageName>\\n\"\nopportunityXml += \"</Opportunity>\"\n\n// Set the transformed XML as the message body\nmessage.setBody(opportunityXml)\nreturn message"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_1",
          "target": "request_reply_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_1\" targetRef=\"request_reply_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "request_reply_1",
          "target": "transform_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"request_reply_1\" targetRef=\"transform_1\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}