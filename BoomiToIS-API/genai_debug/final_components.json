{
  "process_name": "Salesforce to SAP Customer Integration",
  "description": "Integration process that synchronizes Salesforce accounts with SAP customer master data by creating SAP customers and updating Salesforce with generated customer numbers",
  "endpoints": [
    {
      "method": "POST",
      "path": "/salesforce-sap-customer-sync",
      "purpose": "Synchronize Salesforce accounts to SAP customer master data with bi-directional updates",
      "components": [
        {
          "type": "enricher",
          "name": "Set_Account_Properties",
          "id": "set_properties_1",
          "config": {
            "content": "Set Account ID and Account Name as exchange properties for use throughout the process"
          }
        },
        {
          "type": "request_reply",
          "name": "Create_SAP_Customer",
          "id": "sap_customer_create_1",
          "config": {
            "endpoint_path": "/sap/bc/rest/bapi_customer_createfromdata1"
          }
        },
        {
          "type": "request_reply",
          "name": "Update_Salesforce_Account",
          "id": "sf_account_update_1",
          "config": {
            "endpoint_path": "/services/data/v58.0/sobjects/Account"
          }
        },
        {
          "type": "groovy_script",
          "name": "Transform_SF_Account_to_SAP",
          "id": "transform_sf_to_sap_1",
          "config": {
            "script": "TransformSFAccountToSAP.groovy"
          }
        },
        {
          "type": "groovy_script",
          "name": "Transform_SAP_Response_to_SF",
          "id": "transform_sap_to_sf_1",
          "config": {
            "script": "TransformSAPResponseToSF.groovy"
          }
        }
      ],
      "error_handling": {
        "exception_subprocess": [
          {
            "type": "enricher",
            "name": "Error_Message_Handler",
            "id": "error_msg_1",
            "trigger": "any_error",
            "config": {
              "content": "Process error occurred during Salesforce to SAP synchronization"
            }
          },
          {
            "type": "request_reply",
            "name": "Send_Error_Notification",
            "id": "error_notify_1",
            "trigger": "any_error",
            "config": {
              "endpoint_path": "/notification/error"
            }
          }
        ]
      },
      "branching": {
        "type": "exclusive",
        "branches": [
          {
            "condition": "New account creation successful",
            "components": [
              "sf_account_update_1"
            ],
            "sequence": [
              "sf_account_update_1"
            ]
          },
          {
            "condition": "Account already exists",
            "components": [
              "info_log_1"
            ],
            "sequence": [
              "info_log_1"
            ]
          }
        ]
      },
      "sequence": [
        "set_properties_1",
        "transform_sf_to_sap_1",
        "sap_customer_create_1",
        "transform_sap_to_sf_1",
        "sf_account_update_1"
      ],
      "transformations": [
        {
          "name": "TransformSFAccountToSAP.groovy",
          "type": "groovy",
          "script": "import com.sap.gateway.ip.core.customdev.util.Message\nimport groovy.json.JsonBuilder\nimport groovy.json.JsonSlurper\n\ndef Message processData(Message message) {\n    def body = message.getBody(String)\n    def jsonSlurper = new JsonSlurper()\n    def sfAccount = jsonSlurper.parseText(body)\n    \n    def sapRequest = [\n        IMPORT: [\n            Object: [\n                I_PI_COMPANYDATA: [\n                    Object: [\n                        NAME: sfAccount.Name,\n                        STREET: sfAccount.BillingStreet,\n                        CITY: sfAccount.BillingCity,\n                        REGION: sfAccount.BillingState,\n                        POSTL_COD1: sfAccount.BillingPostalCode,\n                        COUNTRY: sfAccount.BillingCountry\n                    ]\n                ]\n            ]\n        ]\n    ]\n    \n    def jsonBuilder = new JsonBuilder(sapRequest)\n    message.setBody(jsonBuilder.toString())\n    return message\n}"
        },
        {
          "name": "TransformSAPResponseToSF.groovy",
          "type": "groovy",
          "script": "import com.sap.gateway.ip.core.customdev.util.Message\nimport groovy.json.JsonBuilder\nimport groovy.json.JsonSlurper\n\ndef Message processData(Message message) {\n    def body = message.getBody(String)\n    def jsonSlurper = new JsonSlurper()\n    def sapResponse = jsonSlurper.parseText(body)\n    \n    def accountId = message.getProperty('AccountID')\n    def accountName = message.getProperty('AccountName')\n    def customerNumber = sapResponse.EXPORT?.CUSTOMERNO\n    \n    def sfUpdateRequest = [\n        Id: accountId,\n        Name: accountName,\n        Description: customerNumber\n    ]\n    \n    def jsonBuilder = new JsonBuilder(sfUpdateRequest)\n    message.setBody(jsonBuilder.toString())\n    return message\n}"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "set_properties_1",
          "target": "sap_customer_create_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"set_properties_1\" targetRef=\"sap_customer_create_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_1",
          "source": "sap_customer_create_1",
          "target": "sf_account_update_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_1\" sourceRef=\"sap_customer_create_1\" targetRef=\"sf_account_update_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_2",
          "source": "sf_account_update_1",
          "target": "transform_sf_to_sap_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_2\" sourceRef=\"sf_account_update_1\" targetRef=\"transform_sf_to_sap_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "transform_sf_to_sap_1",
          "target": "transform_sap_to_sf_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"transform_sf_to_sap_1\" targetRef=\"transform_sap_to_sf_1\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}