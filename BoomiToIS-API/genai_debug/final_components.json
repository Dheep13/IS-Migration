{
  "process_name": "Connect SAP SuccessFactors to SFTP with Error Handling",
  "description": "This integration extracts employee data from SAP SuccessFactors, transforms it into Kafka Avro format, and transfers it to an SFTP server with comprehensive error handling capabilities.",
  "endpoints": [
    {
      "method": "GET",
      "path": "/successfactors/employee-data",
      "purpose": "Extract employee data from SuccessFactors, transform it, and upload to SFTP server",
      "components": [
        {
          "type": "enricher",
          "name": "Prepare_SFTP_Upload",
          "id": "prepare_sftp_1",
          "config": {
            "content": "${property.SFTPFilePath}/${date:now:yyyyMMdd}_employee_data.json"
          }
        },
        {
          "type": "request_reply",
          "name": "Get_SuccessFactors_Employee_Data",
          "id": "successfactors_get_1",
          "config": {
            "endpoint_path": "/odata/v2/User",
            "address": "https://api.successfactors.com"
          }
        },
        {
          "type": "request_reply",
          "name": "Upload_To_SFTP",
          "id": "sftp_upload_1",
          "config": {
            "endpoint_path": "${property.SFTPFilePath}",
            "address": "sftp://${property.SFTPHost}"
          }
        },
        {
          "type": "groovy_script",
          "name": "Transform_Canonical_To_Kafka_Avro",
          "id": "transform_canonical_to_kafka_1",
          "config": {
            "script": "CanonicalToKafkaAvroTransformation.groovy"
          }
        }
      ],
      "error_handling": {
        "exception_subprocess": [
          {
            "type": "enricher",
            "name": "Prepare_Error_Notification",
            "id": "error_notification_1",
            "trigger": "any_error",
            "config": {
              "content": "{\n  \"error\": \"Integration failure\",\n  \"process\": \"Connect SAP SuccessFactors to SFTP\",\n  \"timestamp\": \"${date:now:yyyy-MM-dd'T'HH:mm:ss}\",\n  \"details\": \"${exception.message}\"\n}"
            }
          },
          {
            "type": "request_reply",
            "name": "Send_Error_Notification",
            "id": "send_notification_1",
            "trigger": "any_error",
            "config": {
              "endpoint_path": "/api/notifications",
              "address": "https://notification-service.example.com"
            }
          }
        ]
      },
      "branching": {
        "type": "exclusive",
        "branches": [
          {
            "condition": "default",
            "components": [
              "successfactors_get_1",
              "transform_canonical_to_kafka_1",
              "prepare_sftp_1",
              "sftp_upload_1"
            ],
            "sequence": [
              "successfactors_get_1",
              "transform_canonical_to_kafka_1",
              "prepare_sftp_1",
              "sftp_upload_1"
            ]
          }
        ]
      },
      "sequence": [
        "successfactors_get_1",
        "transform_canonical_to_kafka_1",
        "prepare_sftp_1",
        "sftp_upload_1"
      ],
      "transformations": [
        {
          "name": "CanonicalToKafkaAvroTransformation.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef inputBody = message.getBody(String.class)\ndef jsonSlurper = new JsonSlurper()\ndef data = jsonSlurper.parseText(inputBody)\n\ndef result = [\n  \"Object\": [\n    \"batchProcessingDirectives\": [\n      \"Object\": [\n        \"accountID\": [\n          \"Object\": [\n            \"username\": data.profileElement9 // Map profile element 9 to username\n          ]\n        ],\n        \"batchProcessingOption\": [\n          \"Array\": [\n            \"ArrayElement1\": [\n              \"Object\": [\n                \"name\": data.profileElement118 // Map profile element 118 to name\n              ]\n            ]\n          ]\n        ]\n      ]\n    ],\n    \"batchContactList\": [\n      \"Array\": [\n        \"ArrayElement1\": [\n          \"Object\": [\n            \"contact\": [\n              \"Array\": [\n                \"ArrayElement1\": [\n                  \"Object\": [\n                    \"contactID\": data.profileElement91, // Map profile element 91 to contactID\n                    \"contactPointList\": [\n                      \"Array\": [\n                        \"ArrayElement1\": [\n                          \"Object\": [\n                            \"contactPoint\": [\n                              \"Array\": [\n                                \"ArrayElement1\": [\n                                  \"Object\": [\n                                    \"type\": data.profileElement111 // Map profile element 111 to type\n                                  ]\n                                ]\n                              ]\n                            ]\n                          ]\n                        ]\n                      ]\n                    ]\n                  ]\n                ]\n              ]\n            ]\n          ]\n        ]\n      ]\n    ]\n  ]\n]\n\nmessage.setBody(JsonOutput.toJson(result))\nreturn message"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "prepare_sftp_1",
          "target": "successfactors_get_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"prepare_sftp_1\" targetRef=\"successfactors_get_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_1",
          "source": "successfactors_get_1",
          "target": "sftp_upload_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_1\" sourceRef=\"successfactors_get_1\" targetRef=\"sftp_upload_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "sftp_upload_1",
          "target": "transform_canonical_to_kafka_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"sftp_upload_1\" targetRef=\"transform_canonical_to_kafka_1\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}