{
  "process_name": "Stripe to Salesforce Opportunity Integration",
  "description": "This integration creates Salesforce Opportunities automatically when Stripe Subscriptions are completed. It listens for Stripe webhook events, transforms subscription data into Salesforce Opportunity format, and creates new Opportunity records in Salesforce.",
  "endpoints": [
    {
      "method": "POST",
      "path": "/webhook/stripe/subscription",
      "purpose": "Receives webhook notifications from Stripe when subscription events occur and creates corresponding Salesforce Opportunities",
      "components": [
        {
          "type": "enricher",
          "name": "Set_Dynamic_Properties_From_Stripe",
          "id": "enricher_1",
          "config": {
            "content": "subscription_id = ${body.data.object.id};\ncustomer_id = ${body.data.object.customer};\nsubscription_status = ${body.data.object.status};"
          }
        },
        {
          "type": "request_reply",
          "name": "Create_Salesforce_Opportunity",
          "id": "request_reply_1",
          "config": {
            "endpoint_path": "/services/data/v55.0/sobjects/Opportunity",
            "method": "POST",
            "address": "${salesforce.url}"
          }
        },
        {
          "type": "groovy_script",
          "name": "Transform_Stripe_To_Salesforce",
          "id": "groovy_1",
          "config": {
            "script": "TransformStripeToSalesforce.groovy"
          }
        }
      ],
      "sequence": [
        "enricher_1",
        "groovy_1",
        "request_reply_1"
      ],
      "transformations": [
        {
          "name": "TransformStripeToSalesforce.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\nimport groovy.xml.*\n\ndef jsonSlurper = new JsonSlurper()\ndef message = messageLog.getVariable('message')\ndef body = message.getBody(String.class)\ndef payload = jsonSlurper.parseText(body)\n\n// Extract subscription data\ndef subscription = payload.data.object\ndef description = subscription.description\ndef name = subscription.name\ndef closeDate = new Date(subscription.created * 1000).format('yyyy-MM-dd')\n\n// Create Salesforce Opportunity XML\ndef writer = new StringWriter()\ndef builder = new MarkupBuilder(writer)\nbuilder.Opportunity {\n    Name(name ?: 'Subscription from Stripe')\n    Description(description ?: 'Created from Stripe subscription')\n    CloseDate(closeDate)\n    StageName('Prospecting')\n}\n\n// Set the output as the message body\nmessage.setBody(writer.toString())\n\n// Set content type header for Salesforce\nmessage.setHeader('Content-Type', 'application/xml')\nmessage.setHeader('Authorization', 'Bearer ' + properties.get('salesforce.token'))\n\nreturn message"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_1",
          "target": "request_reply_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_1\" targetRef=\"request_reply_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "request_reply_1",
          "target": "groovy_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"request_reply_1\" targetRef=\"groovy_1\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}