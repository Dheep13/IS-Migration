{
  "process_name": "Stripe to Salesforce Opportunity Integration",
  "description": "This integration creates Salesforce Opportunities automatically when Stripe Subscriptions are completed. It listens for Stripe webhook events, transforms the subscription data into Salesforce Opportunity format, and creates new Opportunity records in Salesforce.",
  "endpoints": [
    {
      "method": "POST",
      "path": "/webhook/stripe/subscription",
      "purpose": "Receives webhook notifications from Stripe when subscription events occur",
      "components": [
        {
          "type": "enricher",
          "name": "Set_Subscription_Properties",
          "id": "enricher_1",
          "config": {
            "content": "Set dynamic properties based on the incoming Stripe webhook data"
          }
        },
        {
          "type": "json_to_xml_converter",
          "name": "Convert_JSON_to_XML",
          "id": "json_to_xml_converter_1",
          "config": {}
        },
        {
          "type": "request_reply",
          "name": "Create_Salesforce_Opportunity",
          "id": "request_reply_1",
          "config": {
            "endpoint_path": "/services/data/v53.0/sobjects/Opportunity",
            "method": "POST"
          }
        },
        {
          "type": "groovy_script",
          "name": "Transform_Stripe_to_Salesforce",
          "id": "groovy_script_1",
          "config": {
            "script": "TransformStripeToSalesforce.groovy"
          }
        },
        {
          "type": "enricher",
          "name": "Format_Response",
          "id": "enricher_2",
          "config": {
            "content": "Format the Salesforce response for the final output"
          }
        }
      ],
      "sequence": [
        "enricher_1",
        "json_to_xml_converter_1",
        "groovy_script_1",
        "request_reply_1",
        "enricher_2"
      ],
      "transformations": [
        {
          "name": "TransformStripeToSalesforce.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\nimport groovy.xml.*\n\ndef jsonSlurper = new JsonSlurper()\ndef message = messageLog.getPayload()\ndef stripeData = jsonSlurper.parseText(message)\n\n// Create Salesforce Opportunity XML\ndef writer = new StringWriter()\ndef builder = new MarkupBuilder(writer)\n\nbuilder.Opportunity {\n    Name(stripeData.data.object.id ?: 'Stripe Subscription')\n    Description(\"Stripe Subscription: \" + (stripeData.data.object.id ?: 'Unknown'))\n    CloseDate(new Date().format('yyyy-MM-dd'))\n    StageName('Closed Won')\n    Amount(stripeData.data.object.items.data[0]?.price?.unit_amount ?: 0)\n    Type('New Business')\n}\n\n// Set the transformed XML as the message payload\nmessage = writer.toString()\nreturn message"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_1",
          "target": "json_to_xml_converter_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_1\" targetRef=\"json_to_xml_converter_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_1",
          "source": "json_to_xml_converter_1",
          "target": "request_reply_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_1\" sourceRef=\"json_to_xml_converter_1\" targetRef=\"request_reply_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_2",
          "source": "request_reply_1",
          "target": "groovy_script_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_2\" sourceRef=\"request_reply_1\" targetRef=\"groovy_script_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "groovy_script_1",
          "target": "enricher_2",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"groovy_script_1\" targetRef=\"enricher_2\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}