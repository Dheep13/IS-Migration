{
  "process_name": "Stripe to Salesforce Opportunity Integration",
  "description": "This integration creates Salesforce Opportunities automatically when new customer subscriptions are created in Stripe. It listens for Stripe webhook events for new subscriptions, transforms the subscription data into a Salesforce Opportunity format, and creates the opportunity in Salesforce.",
  "endpoints": [
    {
      "method": "POST",
      "path": "/stripe/webhook/subscription",
      "purpose": "Receives subscription completed events from Stripe and creates Salesforce Opportunities",
      "components": [
        {
          "type": "enricher",
          "name": "Set_Dynamic_Properties",
          "id": "enricher_1",
          "config": {
            "content": "Sets dynamic properties needed for the transformation"
          }
        },
        {
          "type": "request_reply",
          "name": "Create_Salesforce_Opportunity",
          "id": "request_reply_1",
          "config": {
            "endpoint_path": "/services/data/v52.0/sobjects/Opportunity"
          }
        },
        {
          "type": "groovy_script",
          "name": "Transform_Subscription_To_Opportunity",
          "id": "transform_1",
          "config": {
            "script": "TransformSubscriptionToOpportunity.groovy"
          }
        }
      ],
      "error_handling": {
        "exception_subprocess": [
          {
            "type": "enricher",
            "name": "Set_Error_Message",
            "id": "error_enricher_1",
            "trigger": "any_error",
            "config": {
              "content": "Error occurred during Stripe to Salesforce integration"
            }
          },
          {
            "type": "groovy_script",
            "name": "Log_Error_Details",
            "id": "error_script_1",
            "trigger": "any_error",
            "config": {
              "script": "LogErrorDetails.groovy"
            }
          }
        ]
      },
      "branching": {
        "type": "exclusive",
        "branches": [
          {
            "condition": "Default path",
            "components": [
              "enricher_1",
              "transform_1",
              "request_reply_1"
            ],
            "sequence": [
              "enricher_1",
              "transform_1",
              "request_reply_1"
            ]
          }
        ]
      },
      "sequence": [
        "enricher_1",
        "transform_1",
        "request_reply_1"
      ],
      "transformations": [
        {
          "name": "TransformSubscriptionToOpportunity.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef jsonData = message.getBody(String.class)\ndef subscription = new JsonSlurper().parseText(jsonData)\n\n// Extract relevant data from Stripe subscription\ndef subscriptionId = subscription.id\ndef customerName = subscription.customer.name ?: \"Customer \" + subscription.customer.id\ndef amount = subscription.plan.amount / 100 // Convert cents to dollars\ndef currency = subscription.plan.currency.toUpperCase()\ndef closeDate = new Date().format(\"yyyy-MM-dd\")\n\n// Create Salesforce Opportunity XML\ndef opportunityXml = \"<Opportunity>\\n\"\nopportunityXml += \"  <Name>${customerName} - ${subscriptionId}</Name>\\n\"\nopportunityXml += \"  <Description>Stripe Subscription: ${subscriptionId} for ${amount} ${currency}</Description>\\n\"\nopportunityXml += \"  <CloseDate>${closeDate}</CloseDate>\\n\"\nopportunityXml += \"  <StageName>Closed Won</StageName>\\n\"\nopportunityXml += \"  <Amount>${amount}</Amount>\\n\"\nopportunityXml += \"</Opportunity>\"\n\n// Set the transformed XML as the message body\nmessage.setBody(opportunityXml)\nreturn message"
        },
        {
          "name": "LogErrorDetails.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef errorMessage = message.getProperty(\"CamelExceptionCaught\")\ndef errorDetails = [\"error\": errorMessage.toString(), \"timestamp\": new Date().toString()]\n\n// Log error details\nprintln \"ERROR: \" + new JsonBuilder(errorDetails).toPrettyString()\n\n// Prepare error response\ndef response = [\"status\": \"error\", \"message\": \"Failed to process Stripe webhook\", \"details\": errorDetails]\nmessage.setBody(new JsonBuilder(response).toString())\n\nreturn message"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_1",
          "target": "request_reply_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_1\" targetRef=\"request_reply_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "request_reply_1",
          "target": "transform_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"request_reply_1\" targetRef=\"transform_1\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}