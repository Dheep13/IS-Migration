{
  "process_name": "SAP SuccessFactors to SFTP Integration with Error Handling",
  "description": "This integration facilitates the secure transfer of employee data from SAP SuccessFactors to an SFTP server with comprehensive error handling capabilities. The integration extracts profile data from SuccessFactors, transforms it into the required format, and delivers it to a designated SFTP location while providing robust error notification mechanisms.",
  "endpoints": [
    {
      "method": "GET",
      "path": "/SuccessFactors/Profile",
      "purpose": "Retrieves employee profile data from SuccessFactors",
      "components": [
        {
          "type": "request_reply",
          "name": "OData Request to SuccessFactors",
          "id": "odata_successfactors_request",
          "config": {
            "adapter_type": "OData",
            "operation": "Query(GET)",
            "resource_path": "/Profile",
            "authentication": "OAuth 2.0",
            "content_type": "application/json"
          }
        },
        {
          "type": "enricher",
          "name": "Data Validation",
          "id": "data_validation",
          "config": {
            "validation_rules": "Validate required profile fields"
          }
        },
        {
          "type": "enricher",
          "name": "Log Success",
          "id": "log_success",
          "config": {
            "log_level": "INFO",
            "message": "Successfully processed SuccessFactors data and delivered to SFTP"
          }
        },
        {
          "type": "groovy_script",
          "name": "Message Mapping",
          "id": "canonical_to_kafka_avro_mapping",
          "config": {
            "mapping_rules": [
              "Map username to Root/Object/batchProcessingDirectives/Object/accountID/Object/username",
              "Map contactID to Root/Object/batchContactList/Array/ArrayElement1/Object/contact/Array/ArrayElement1/Object/contactID",
              "Map contact type to Root/Object/batchContactList/Array/ArrayElement1/Object/contact/Array/ArrayElement1/Object/contactPointList/Array/ArrayElement1/Object/contactPoint/Array/ArrayElement1/Object/type",
              "Map name to Root/Object/batchProcessingDirectives/Object/batchProcessingOption/Array/ArrayElement1/Object/name"
            ]
          }
        },
        {
          "type": "groovy_script",
          "name": "Error Handler",
          "id": "error_handler",
          "config": {
            "error_logging": "Detailed error logging with context",
            "notification_method": "Email",
            "retry_logic": "Configurable retry attempts for transient errors"
          }
        },
        {
          "type": "request_reply",
          "name": "SFTP Delivery",
          "id": "sftp_delivery",
          "config": {
            "adapter_type": "SFTP",
            "operation": "Write",
            "target_directory": "/incoming/successfactors",
            "file_naming": "dynamic_based_on_datetime",
            "authentication": "Username/Password or Key-based"
          }
        }
      ],
      "sequence": [
        "odata_successfactors_request",
        "data_validation",
        "canonical_to_kafka_avro_mapping",
        "sftp_delivery",
        "log_success"
      ],
      "transformations": [
        {
          "source_format": "SuccessFactors Profile JSON",
          "target_format": "Structured hierarchical JSON",
          "mapping_id": "canonical_to_kafka_avro_mapping"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "odata_successfactors_request",
          "target": "data_validation",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"odata_successfactors_request\" targetRef=\"data_validation\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_1",
          "source": "data_validation",
          "target": "log_success",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_1\" sourceRef=\"data_validation\" targetRef=\"log_success\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_2",
          "source": "log_success",
          "target": "canonical_to_kafka_avro_mapping",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_2\" sourceRef=\"log_success\" targetRef=\"canonical_to_kafka_avro_mapping\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_3",
          "source": "canonical_to_kafka_avro_mapping",
          "target": "error_handler",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_3\" sourceRef=\"canonical_to_kafka_avro_mapping\" targetRef=\"error_handler\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "error_handler",
          "target": "sftp_delivery",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"error_handler\" targetRef=\"sftp_delivery\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}