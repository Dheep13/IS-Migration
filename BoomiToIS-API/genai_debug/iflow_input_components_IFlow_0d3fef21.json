{
  "api_name": "Products API",
  "base_url": "/products",
  "endpoints": [
    {
      "method": "GET",
      "path": "/products",
      "purpose": "Retrieves product details based on a product identifier",
      "components": [
        {
          "type": "odata",
          "name": "Get_Product_Details",
          "id": "odata_get_product",
          "config": {
            "address": "https://saphana.example.com/odata/service",
            "resource_path": "Products",
            "operation": "Query(GET)",
            "query_options": "$filter=ProductId eq '${request.queryparam.productIdentifier}'&$select=ProductId,Category,CategoryName,CurrencyCode,DimensionDepth,DimensionHeight,DimensionUnit,DimensionWidth,LongDescription,Name,PictureUrl,Price,QuantityUnit,ShortDescription,SupplierId,Weight,WeightUnit"
          }
        },
        {
          "type": "enricher",
          "name": "Validate_Product_Identifier",
          "id": "enricher_validate_product",
          "config": {
            "content": "productIdentifier = ${request.queryparam.productIdentifier};\nvalidProductIds = '${property.odata.productIdentifiers}'.split(',');\nisValidProduct = validProductIds.includes(productIdentifier);\n${property.isExistProduct} = isValidProduct;"
          }
        },
        {
          "type": "groovy_script",
          "name": "Format_Response",
          "id": "script_format_response",
          "config": {
            "script": "FormatProductResponse.groovy"
          }
        }
      ],
      "sequence": [
        "enricher_validate_product",
        "odata_get_product",
        "script_format_response"
      ],
      "transformations": [
        {
          "name": "FormatProductResponse.groovy",
          "type": "groovy",
          "script": "import com.sap.gateway.ip.core.customdev.util.Message;\nimport groovy.json.JsonSlurper;\nimport groovy.json.JsonBuilder;\n\ndef Message processData(Message message) {\n    def body = message.getBody(String);\n    def isExistProduct = message.getProperty(\"isExistProduct\");\n    \n    if (isExistProduct != null && isExistProduct.equals(\"true\")) {\n        // Process successful response\n        def jsonSlurper = new JsonSlurper();\n        def payload = jsonSlurper.parseText(body);\n        \n        // Just pass through the payload as is\n        message.setBody(new JsonBuilder(payload).toString());\n    } else {\n        // Create error response\n        def productIdentifier = message.getProperty(\"productIdentifier\");\n        def errorResponse = [\n            status: \"error\",\n            message: \"The product identifier \" + productIdentifier + \" was not found.\",\n            errorCode: \"PRODUCT_NOT_FOUND\"\n        ];\n        \n        message.setBody(new JsonBuilder(errorResponse).toString());\n        message.setHeader(\"Content-Type\", \"application/json\");\n    }\n    \n    return message;\n}"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "odata_get_product",
          "target": "enricher_validate_product",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"odata_get_product\" targetRef=\"enricher_validate_product\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "enricher_validate_product",
          "target": "script_format_response",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"enricher_validate_product\" targetRef=\"script_format_response\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}