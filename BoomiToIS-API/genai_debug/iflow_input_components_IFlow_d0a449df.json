{
  "process_name": "Create Salesforce Opportunities from Stripe Subscriptions",
  "description": "This integration creates Salesforce Opportunities based on Stripe Subscription data. It retrieves customer and product information from Stripe APIs and uses this data to create opportunities in Salesforce.",
  "endpoints": [
    {
      "method": "POST",
      "path": "/create-opportunity",
      "purpose": "Create Salesforce Opportunity from Stripe Subscription data",
      "components": [
        {
          "type": "enricher",
          "name": "Set_Initial_Properties",
          "id": "enricher_1",
          "config": {
            "content": "Set initial properties for the integration process"
          }
        },
        {
          "type": "enricher",
          "name": "Extract_Customer_Name",
          "id": "enricher_customer_name",
          "config": {
            "content": "Extract and store customer name from Stripe response"
          }
        },
        {
          "type": "enricher",
          "name": "Extract_Product_Name",
          "id": "enricher_product_name",
          "config": {
            "content": "Extract and store product name from Stripe response"
          }
        },
        {
          "type": "groovy_script",
          "name": "Calculate_Description_And_CloseDate",
          "id": "script_calculate_fields",
          "config": {
            "script": "import java.time.*\nimport java.time.format.*\n\ndef customerName = message.getProperty(\"DDP_CustomerName\")\ndef subscription = message.getProperty(\"DDP_Subscription\")\n\n// Create description\nmessage.setProperty(\"DDP_SalesforceDescription\", customerName + \" has subscribed to: \" + subscription)\n\n// Calculate close date (current date minus 3 months)\ndef today = LocalDate.now()\ndef closeDate = today.minusMonths(3)\ndef formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")\nmessage.setProperty(\"DDP_CloseDate\", closeDate.format(formatter))\n\nreturn message"
          }
        },
        {
          "type": "request_reply",
          "name": "Get_Stripe_Customer",
          "id": "request_reply_customer",
          "receiver_adapter": {
            "type": "http_adapter",
            "operation": "GET",
            "endpoint": "/customers/{customer_id}",
            "connection": "stripe_api_connection"
          },
          "config": {
            "endpoint_path": "/customers/{customer_id}",
            "method": "GET",
            "address": "https://api.stripe.com/v1"
          }
        },
        {
          "type": "request_reply",
          "name": "Get_Stripe_Product",
          "id": "request_reply_product",
          "receiver_adapter": {
            "type": "http_adapter",
            "operation": "GET",
            "endpoint": "/products/{product_id}",
            "connection": "stripe_api_connection"
          },
          "config": {
            "endpoint_path": "/products/{product_id}",
            "method": "GET",
            "address": "https://api.stripe.com/v1"
          }
        },
        {
          "type": "request_reply",
          "name": "Create_Salesforce_Opportunity",
          "id": "request_reply_salesforce",
          "receiver_adapter": {
            "type": "odata_adapter",
            "operation": "POST",
            "endpoint": "/services/data/v52.0/sobjects/Opportunity",
            "connection": "salesforce_odata_connection"
          },
          "config": {
            "endpoint_path": "/services/data/v52.0/sobjects/Opportunity",
            "method": "POST",
            "address": "${property.SalesforceInstance}",
            "resource_path": "Opportunity"
          }
        },
        {
          "type": "groovy_script",
          "name": "Transform_To_Salesforce_Format",
          "id": "script_transform_to_sf",
          "config": {
            "script": "import groovy.json.*\n\ndef jsonSlurper = new JsonSlurper()\ndef body = jsonSlurper.parseText(message.getBody(String.class))\n\ndef opportunityData = [\n    \"Name\": \"Subscription: \" + message.getProperty(\"DDP_Subscription\"),\n    \"Description\": message.getProperty(\"DDP_SalesforceDescription\"),\n    \"CloseDate\": message.getProperty(\"DDP_CloseDate\"),\n    \"StageName\": \"Closed Won\",\n    \"Amount\": body.amount ? body.amount : 0.0\n]\n\nmessage.setBody(JsonOutput.toJson(opportunityData))\nreturn message"
          }
        }
      ],
      "error_handling": {
        "exception_subprocess": [
          {
            "type": "enricher",
            "name": "Set_Error_Message",
            "id": "error_enricher_1",
            "trigger": "any_error",
            "config": {
              "content": "Set error details for notification"
            }
          },
          {
            "type": "groovy_script",
            "name": "Format_Error_Notification",
            "id": "error_script_1",
            "trigger": "any_error",
            "config": {
              "script": "def errorMsg = message.getProperty(\"ErrorMessage\")\ndef errorDetails = message.getProperty(\"ErrorDetails\")\n\ndef emailBody = \"Error in Stripe to Salesforce integration:\\n\" + \n               \"Error Message: \" + errorMsg + \"\\n\" + \n               \"Error Details: \" + errorDetails\n\nmessage.setBody(emailBody)\nreturn message"
            }
          },
          {
            "type": "request_reply",
            "name": "Send_Error_Notification",
            "id": "error_notification_1",
            "trigger": "any_error",
            "receiver_adapter": {
              "type": "mail_adapter",
              "operation": "SEND",
              "endpoint": "/send",
              "connection": "mail_connection"
            },
            "config": {
              "endpoint_path": "/send",
              "method": "POST"
            }
          }
        ]
      },
      "sequence": [
        "enricher_1",
        "request_reply_customer",
        "enricher_customer_name",
        "request_reply_product",
        "enricher_product_name",
        "script_calculate_fields",
        "script_transform_to_sf",
        "request_reply_salesforce"
      ],
      "transformations": [
        {
          "name": "CalculateDescriptionAndCloseDate.groovy",
          "type": "groovy",
          "script": "import java.time.*\nimport java.time.format.*\n\ndef customerName = message.getProperty(\"DDP_CustomerName\")\ndef subscription = message.getProperty(\"DDP_Subscription\")\n\n// Create description\nmessage.setProperty(\"DDP_SalesforceDescription\", customerName + \" has subscribed to: \" + subscription)\n\n// Calculate close date (current date minus 3 months)\ndef today = LocalDate.now()\ndef closeDate = today.minusMonths(3)\ndef formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")\nmessage.setProperty(\"DDP_CloseDate\", closeDate.format(formatter))\n\nreturn message"
        },
        {
          "name": "TransformToSalesforceFormat.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef jsonSlurper = new JsonSlurper()\ndef body = jsonSlurper.parseText(message.getBody(String.class))\n\ndef opportunityData = [\n    \"Name\": \"Subscription: \" + message.getProperty(\"DDP_Subscription\"),\n    \"Description\": message.getProperty(\"DDP_SalesforceDescription\"),\n    \"CloseDate\": message.getProperty(\"DDP_CloseDate\"),\n    \"StageName\": \"Closed Won\",\n    \"Amount\": body.amount ? body.amount : 0.0\n]\n\nmessage.setBody(JsonOutput.toJson(opportunityData))\nreturn message"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_1",
          "target": "enricher_customer_name",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_1\" targetRef=\"enricher_customer_name\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_1",
          "source": "enricher_customer_name",
          "target": "enricher_product_name",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_1\" sourceRef=\"enricher_customer_name\" targetRef=\"enricher_product_name\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_2",
          "source": "enricher_product_name",
          "target": "script_calculate_fields",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_2\" sourceRef=\"enricher_product_name\" targetRef=\"script_calculate_fields\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_3",
          "source": "script_calculate_fields",
          "target": "request_reply_customer",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_3\" sourceRef=\"script_calculate_fields\" targetRef=\"request_reply_customer\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_4",
          "source": "request_reply_customer",
          "target": "request_reply_product",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_4\" sourceRef=\"request_reply_customer\" targetRef=\"request_reply_product\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_5",
          "source": "request_reply_product",
          "target": "request_reply_salesforce",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_5\" sourceRef=\"request_reply_product\" targetRef=\"request_reply_salesforce\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "request_reply_salesforce",
          "target": "script_transform_to_sf",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"request_reply_salesforce\" targetRef=\"script_transform_to_sf\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}