{
  "process_name": "Stripe to Salesforce Opportunity Integration",
  "description": "This integration creates Salesforce Opportunities automatically when new customer subscriptions are created in Stripe. It listens for Stripe webhook events for new subscriptions, transforms the subscription data, and creates corresponding opportunity records in Salesforce.",
  "endpoints": [
    {
      "method": "POST",
      "path": "/stripe/webhook",
      "purpose": "Receives subscription completed events from Stripe and creates Salesforce Opportunities",
      "components": [
        {
          "type": "enricher",
          "name": "Set_Dynamic_Properties",
          "id": "enricher_1",
          "config": {
            "content": "Sets dynamic document properties needed for the transformation"
          }
        },
        {
          "type": "request_reply",
          "name": "Create_Salesforce_Opportunity",
          "id": "request_reply_1",
          "config": {
            "endpoint_path": "/services/data/v52.0/sobjects/Opportunity",
            "address": "https://{{salesforce_instance}}.salesforce.com"
          }
        },
        {
          "type": "groovy_script",
          "name": "Transform_Stripe_To_Salesforce",
          "id": "transform_1",
          "config": {
            "script": "TransformStripeToSalesforce.groovy"
          }
        }
      ],
      "error_handling": {
        "exception_subprocess": [
          {
            "type": "enricher",
            "name": "Set_Error_Message",
            "id": "error_enricher_1",
            "trigger": "any_error",
            "config": {
              "content": "Error occurred during Stripe to Salesforce integration"
            }
          },
          {
            "type": "groovy_script",
            "name": "Log_Error_Details",
            "id": "error_script_1",
            "trigger": "any_error",
            "config": {
              "script": "LogErrorDetails.groovy"
            }
          }
        ]
      },
      "sequence": [
        "enricher_1",
        "transform_1",
        "request_reply_1"
      ],
      "transformations": [
        {
          "name": "TransformStripeToSalesforce.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef jsonData = message.getBody(String.class)\ndef stripeData = new JsonSlurper().parseText(jsonData)\n\n// Extract subscription details\ndef subscriptionName = stripeData.data?.object?.plan?.nickname ?: \"Subscription from \" + stripeData.data?.object?.customer\ndef subscriptionDesc = \"Stripe subscription: \" + stripeData.data?.object?.id\n\n// Format date for Salesforce (YYYY-MM-DD)\ndef currentDate = new Date().format(\"yyyy-MM-dd\")\n\n// Create Salesforce Opportunity XML\ndef opportunityXml = \"<Opportunity>\\n\"\nopportunityXml += \"  <Name>${subscriptionName}</Name>\\n\"\nopportunityXml += \"  <Description>${subscriptionDesc}</Description>\\n\"\nopportunityXml += \"  <CloseDate>${currentDate}</CloseDate>\\n\"\nopportunityXml += \"  <StageName>Closed Won</StageName>\\n\"\nopportunityXml += \"</Opportunity>\"\n\n// Set the transformed XML as the message body\nmessage.setBody(opportunityXml)\nreturn message"
        },
        {
          "name": "LogErrorDetails.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef errorMessage = message.getProperty(\"CamelExceptionCaught\")\ndef errorDetails = [\"error\": errorMessage.toString(), \"timestamp\": new Date().toString()]\n\n// Log error details\nprintln \"Error in Stripe to Salesforce integration: ${errorDetails.error}\"\n\n// Create error response\ndef errorResponse = new JsonBuilder(errorDetails).toString()\nmessage.setBody(errorResponse)\nreturn message"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_1",
          "target": "request_reply_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_1\" targetRef=\"request_reply_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "request_reply_1",
          "target": "transform_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"request_reply_1\" targetRef=\"transform_1\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}