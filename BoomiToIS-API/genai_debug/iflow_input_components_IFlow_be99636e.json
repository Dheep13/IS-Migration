{
  "api_name": "SAP HANA Product Information API",
  "base_url": "/products",
  "endpoints": [
    {
      "method": "GET",
      "path": "/products",
      "purpose": "Retrieves detailed product information based on a product identifier",
      "components": [
        {
          "type": "enricher",
          "name": "Log_Request_Status",
          "id": "enricher_log_request",
          "config": {
            "content": "if (message.getProperty('isExistProduct')) {\n    message.setHeader('LogMessage', 'The request is processed and sent downstream with the product identifier ' + message.getHeaders().get('productIdentifier'));\n} else {\n    message.setHeader('LogMessage', 'The product identifier ' + message.getHeaders().get('productIdentifier') + ' was not passed in the request or was passed incorrectly.');\n}\nreturn message;"
          }
        },
        {
          "type": "odata",
          "name": "Get_Product_Details",
          "id": "odata_get_product",
          "config": {
            "address": "{{Destination Host}}/{{Service URL}}",
            "resource_path": "Products",
            "operation": "Query(GET)",
            "query_options": "$filter=ProductId eq '${property.productIdentifier}'&$select=ProductId,Category,CategoryName,CurrencyCode,DimensionDepth,DimensionHeight,DimensionUnit,DimensionWidth,LongDescription,Name,PictureUrl,Price,QuantityUnit,ShortDescription,SupplierId,Weight,WeightUnit"
          }
        },
        {
          "type": "enricher",
          "name": "Validate_Product_Identifier",
          "id": "enricher_validate_product",
          "config": {
            "content": "def productIdentifiers = property.get('odata.productIdentifiers').split(',');\ndef requestedProductId = message.getHeaders().get('productIdentifier');\ndef isValid = productIdentifiers.contains(requestedProductId);\nmessage.setProperty('isExistProduct', isValid);\nreturn message;"
          }
        },
        {
          "type": "enricher",
          "name": "Format_Response",
          "id": "enricher_format_response",
          "config": {
            "content": "if (!message.getProperty('isExistProduct')) {\n    def errorResponse = '{\"status\": \"error\", \"message\": \"The product identifier ' + message.getHeaders().get('productIdentifier') + ' was not found.\", \"errorCode\": \"PRODUCT_NOT_FOUND\"}';\n    message.setBody(errorResponse);\n    message.setHeader('Content-Type', 'application/json');\n} else {\n    message.setHeader('Content-Type', 'application/json');\n}\nreturn message;"
          }
        }
      ],
      "sequence": [
        "enricher_validate_product",
        "enricher_log_request",
        "odata_get_product",
        "enricher_format_response"
      ],
      "transformations": [
        {
          "name": "ValidateProductIdentifier.groovy",
          "type": "groovy",
          "script": "def productIdentifiers = property.get('odata.productIdentifiers').split(',');\ndef requestedProductId = message.getHeaders().get('productIdentifier');\ndef isValid = productIdentifiers.contains(requestedProductId);\nmessage.setProperty('isExistProduct', isValid);\nreturn message;"
        },
        {
          "name": "FormatResponse.groovy",
          "type": "groovy",
          "script": "if (!message.getProperty('isExistProduct')) {\n    def errorResponse = '{\"status\": \"error\", \"message\": \"The product identifier ' + message.getHeaders().get('productIdentifier') + ' was not found.\", \"errorCode\": \"PRODUCT_NOT_FOUND\"}';\n    message.setBody(errorResponse);\n    message.setHeader('Content-Type', 'application/json');\n} else {\n    message.setHeader('Content-Type', 'application/json');\n}\nreturn message;"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_log_request",
          "target": "odata_get_product",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_log_request\" targetRef=\"odata_get_product\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_1",
          "source": "odata_get_product",
          "target": "enricher_validate_product",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_1\" sourceRef=\"odata_get_product\" targetRef=\"enricher_validate_product\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "enricher_validate_product",
          "target": "enricher_format_response",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"enricher_validate_product\" targetRef=\"enricher_format_response\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}