{
  "process_name": "Stripe to Salesforce Opportunity Integration",
  "description": "This integration creates Salesforce Opportunities automatically when Stripe Subscriptions are completed. It listens for Stripe webhook events, transforms the subscription data into a Salesforce Opportunity format, and creates the corresponding Opportunity record in Salesforce.",
  "endpoints": [
    {
      "method": "POST",
      "path": "/webhook/stripe/subscription",
      "purpose": "Receives webhook notifications from Stripe when subscription events occur and creates corresponding Salesforce Opportunities",
      "components": [
        {
          "type": "enricher",
          "name": "Extract_Stripe_Subscription_Data",
          "id": "enricher_stripe_data_1",
          "config": {
            "content": "subscription_id = ${body.data.object.id};\ncustomer_id = ${body.data.object.customer};\nsubscription_amount = ${body.data.object.items.data[0].price.unit_amount};\nsubscription_status = ${body.data.object.status};\nsubscription_date = ${body.data.object.current_period_start};"
          }
        },
        {
          "type": "request_reply",
          "name": "Create_Salesforce_Opportunity",
          "id": "request_reply_salesforce_1",
          "config": {
            "endpoint_path": "/services/data/v55.0/sobjects/Opportunity",
            "method": "POST",
            "address": "https://{{salesforce_instance}}.salesforce.com",
            "authentication": "OAuth2ClientCredentials",
            "content_type": "application/xml"
          }
        },
        {
          "type": "groovy_script",
          "name": "Transform_Stripe_To_Salesforce",
          "id": "groovy_transform_1",
          "config": {
            "script": "TransformStripeToSalesforce.groovy"
          }
        }
      ],
      "sequence": [
        "enricher_stripe_data_1",
        "groovy_transform_1",
        "request_reply_salesforce_1"
      ],
      "transformations": [
        {
          "name": "TransformStripeToSalesforce.groovy",
          "type": "groovy",
          "script": "import groovy.xml.*\n\ndef jsonSlurper = new groovy.json.JsonSlurper()\ndef stripeData = jsonSlurper.parseText(message.getBody(String.class))\n\n// Extract subscription data\ndef subscriptionObj = stripeData.data.object\ndef subscriptionId = subscriptionObj.id\ndef customerId = subscriptionObj.customer\ndef amount = subscriptionObj.items.data[0].price.unit_amount / 100 // Convert cents to dollars\ndef status = subscriptionObj.status\ndef startDate = new Date(subscriptionObj.current_period_start * 1000).format('yyyy-MM-dd')\n\n// Create Salesforce Opportunity XML\ndef writer = new StringWriter()\ndef builder = new MarkupBuilder(writer)\n\nbuilder.Opportunity {\n    Name(\"Stripe Subscription - \" + customerId)\n    Description(\"Subscription ID: \" + subscriptionId + \", Status: \" + status)\n    CloseDate(startDate)\n    StageName(\"Closed Won\")\n    Amount(amount)\n    Type(\"New Business\")\n    LeadSource(\"Web\")\n    // AccountId would typically be looked up based on customer_id\n    // For this example, we're using a placeholder\n    AccountId(\"001PLACEHOLDER\")\n}\n\n// Set the transformed XML as the message body\nmessage.setBody(writer.toString())\nreturn message"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_stripe_data_1",
          "target": "request_reply_salesforce_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_stripe_data_1\" targetRef=\"request_reply_salesforce_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "request_reply_salesforce_1",
          "target": "groovy_transform_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"request_reply_salesforce_1\" targetRef=\"groovy_transform_1\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}