{
  "process_name": "Stripe to Salesforce Opportunity Integration",
  "description": "This integration creates Salesforce Opportunities automatically when new customer subscriptions are created in Stripe. The process listens for Stripe webhook events for new subscriptions, transforms the subscription data, and creates corresponding opportunity records in Salesforce.",
  "endpoints": [
    {
      "method": "POST",
      "path": "/webhook/stripe/subscription",
      "purpose": "Receives subscription completed events from Stripe and creates Salesforce Opportunities",
      "components": [
        {
          "type": "enricher",
          "name": "Set_Dynamic_Properties",
          "id": "enricher_1",
          "config": {
            "content": "Opportunity Name, Opportunity Description, Opportunity Close Date from Stripe subscription data"
          }
        },
        {
          "type": "request_reply",
          "name": "Create_Salesforce_Opportunity",
          "id": "request_reply_1",
          "config": {
            "endpoint_path": "/services/data/v50.0/sobjects/Opportunity",
            "content": "XML payload for Salesforce Opportunity creation"
          }
        },
        {
          "type": "groovy_script",
          "name": "Transform_Subscription_To_Opportunity",
          "id": "transform_1",
          "config": {
            "script": "TransformStripeToSalesforce.groovy"
          }
        }
      ],
      "error_handling": {
        "exception_subprocess": [
          {
            "type": "enricher",
            "name": "Prepare_Error_Message",
            "id": "error_enricher_1",
            "trigger": "any_error",
            "config": {
              "content": "Error details from process execution"
            }
          },
          {
            "type": "request_reply",
            "name": "Send_Error_Notification",
            "id": "error_notification_1",
            "trigger": "any_error",
            "config": {
              "endpoint_path": "/api/notifications/email"
            }
          }
        ]
      },
      "branching": {
        "type": "exclusive",
        "branches": [
          {
            "condition": "Default path",
            "components": [
              "enricher_1",
              "transform_1",
              "request_reply_1"
            ],
            "sequence": [
              "enricher_1",
              "transform_1",
              "request_reply_1"
            ]
          }
        ]
      },
      "sequence": [
        "enricher_1",
        "transform_1",
        "request_reply_1"
      ],
      "transformations": [
        {
          "name": "TransformStripeToSalesforce.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef jsonSlurper = new JsonSlurper()\ndef stripeData = jsonSlurper.parseText(message.getBody(String.class))\n\n// Extract subscription data\ndef subscription = stripeData.data.object\n\n// Create Salesforce Opportunity XML\ndef opportunityXml = \"<Opportunity>\\n\"\nopportunityXml += \"  <Name>${subscription.customer.name} - ${subscription.plan.nickname}</Name>\\n\"\nopportunityXml += \"  <Description>Stripe Subscription: ${subscription.id}</Description>\\n\"\n\n// Format today's date as Salesforce expects (YYYY-MM-DD)\ndef today = new Date()\ndef closeDate = today.format('yyyy-MM-dd')\nopportunityXml += \"  <CloseDate>${closeDate}</CloseDate>\\n\"\n\n// Set as Closed Won since this is for a completed subscription\nopportunityXml += \"  <StageName>Closed Won</StageName>\\n\"\n\n// Set amount from subscription\nopportunityXml += \"  <Amount>${subscription.plan.amount / 100}</Amount>\\n\"\nopportunityXml += \"</Opportunity>\"\n\n// Set the output message body\nmessage.setBody(opportunityXml)\nreturn message"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_1",
          "target": "request_reply_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_1\" targetRef=\"request_reply_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "request_reply_1",
          "target": "transform_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"request_reply_1\" targetRef=\"transform_1\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}