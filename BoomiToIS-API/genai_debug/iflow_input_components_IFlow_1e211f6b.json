{
  "api_name": "SAP OData Product Information API",
  "base_url": "/products",
  "endpoints": [
    {
      "method": "GET",
      "path": "/products",
      "purpose": "Fetch detailed product information from SAP HANA based on a product identifier",
      "components": [
        {
          "type": "router",
          "name": "Check_Product_Validity",
          "id": "router_product_validity",
          "config": {
            "conditions": [
              {
                "id": "valid_product",
                "expression": "${property.isExistProduct} == true"
              },
              {
                "id": "invalid_product",
                "expression": "${property.isExistProduct} == false"
              }
            ]
          }
        },
        {
          "type": "odata",
          "name": "Get_Product_Details",
          "id": "odata_get_product_details",
          "config": {
            "service_task_id": "ServiceTask_OData_products",
            "participant_id": "Participant_OData_products",
            "message_flow_id": "MessageFlow_OData_products",
            "address": "${property.HANA_HTTP_BASE_URL}",
            "resource_path": "Products",
            "operation": "Query(GET)",
            "query_options": "$filter=ProductId eq '${property.productIdentifier}'&$select=ProductId,Category,CategoryName,CurrencyCode,DimensionDepth,DimensionHeight,DimensionUnit,DimensionWidth,LongDescription,Name,PictureUrl,Price,QuantityUnit,ShortDescription,SupplierId,Weight,WeightUnit"
          }
        },
        {
          "type": "enricher",
          "name": "Validate_Product_Identifier",
          "id": "enricher_validate_product",
          "config": {
            "script_ref": "ValidateProductIdentifier.groovy"
          }
        },
        {
          "type": "enricher",
          "name": "Create_Error_Response",
          "id": "enricher_error_response",
          "config": {
            "script_ref": "CreateErrorResponse.groovy"
          }
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "router_product_validity",
          "target": "odata_get_product_details",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"router_product_validity\" targetRef=\"odata_get_product_details\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_1",
          "source": "odata_get_product_details",
          "target": "enricher_validate_product",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_1\" sourceRef=\"odata_get_product_details\" targetRef=\"enricher_validate_product\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "enricher_validate_product",
          "target": "enricher_error_response",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"enricher_validate_product\" targetRef=\"enricher_error_response\" isImmediate=\"true\"/>"
        }
      ],
      "transformations": [
        {
          "name": "ValidateProductIdentifier.groovy",
          "type": "groovy",
          "script": "def productIdentifiers = properties.get(\"odata.productIdentifiers\").split(\",\")\ndef requestedIdentifier = message.getProperty(\"productIdentifier\")\ndef isValid = productIdentifiers.any { it == requestedIdentifier }\nmessage.setProperty(\"isExistProduct\", isValid)\nreturn message"
        },
        {
          "name": "CreateErrorResponse.groovy",
          "type": "groovy",
          "script": "import groovy.json.JsonBuilder\n\ndef response = [:]\nresponse.status = \"error\"\nresponse.message = \"The product identifier \" + message.getProperty(\"productIdentifier\") + \" was not found.\"\nresponse.errorCode = \"PRODUCT_NOT_FOUND\"\n\ndef builder = new JsonBuilder(response)\nmessage.setBody(builder.toString())\nreturn message"
        }
      ]
    }
  ]
}