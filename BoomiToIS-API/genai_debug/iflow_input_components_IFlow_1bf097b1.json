{
  "process_name": "SAP SuccessFactors to SFTP Integration with Error Handling",
  "description": "This integration extracts employee contact data from SAP SuccessFactors via OData API, transforms it into the required format, and uploads it to a designated SFTP server with comprehensive error handling.",
  "endpoints": [
    {
      "method": "GET",
      "path": "/odata/v2/User",
      "purpose": "Retrieves user contact information from SuccessFactors and uploads to SFTP",
      "components": [
        {
          "type": "odata",
          "name": "Get_SuccessFactors_User_Data",
          "id": "odata_successfactors_1",
          "config": {
            "address": "https://${successfactors.tenant}.successfactors.com",
            "resource_path": "User",
            "operation": "Query(GET)",
            "query_options": "$select=username,contactInfo&$expand=contactInfo"
          }
        },
        {
          "type": "enricher",
          "name": "Prepare_SFTP_Upload",
          "id": "enricher_sftp_1",
          "config": {
            "content": "Generate dynamic filename with timestamp: contacts_${date:now:yyyyMMdd_HHmmss}.json"
          }
        },
        {
          "type": "enricher",
          "name": "Log_Success",
          "id": "enricher_log_success_1",
          "config": {
            "content": "Successfully uploaded contact data to SFTP server"
          }
        },
        {
          "type": "router",
          "name": "Error_Handler",
          "id": "router_error_1",
          "config": {
            "conditions": [
              {
                "condition": "$[exception] != null",
                "route_to": "enricher_error_1"
              },
              {
                "condition": "true",
                "route_to": "enricher_log_success_1"
              }
            ]
          }
        },
        {
          "type": "enricher",
          "name": "Prepare_Error_Notification",
          "id": "enricher_error_1",
          "config": {
            "content": "Error in SuccessFactors to SFTP Integration: ${exception.message}"
          }
        },
        {
          "type": "request_reply",
          "name": "SFTP_Upload",
          "id": "sftp_upload_1",
          "config": {
            "endpoint_path": "sftp://${sftp.username}:${sftp.password}@${sftp.server}:${sftp.port}/${sftp.directory}"
          }
        },
        {
          "type": "request_reply",
          "name": "Send_Error_Notification",
          "id": "email_notification_1",
          "config": {
            "endpoint_path": "smtp://${error.notification.sender}@mail-server?to=${error.notification.recipients}&subject=SuccessFactors to SFTP Integration Error"
          }
        },
        {
          "type": "groovy_script",
          "name": "Transform_Data_To_Target_Format",
          "id": "script_transform_1",
          "config": {
            "script": "TransformSuccessFactorsToTargetFormat.groovy"
          }
        }
      ],
      "sequence": [
        "odata_successfactors_1",
        "router_error_1",
        "script_transform_1",
        "enricher_sftp_1",
        "sftp_upload_1",
        "enricher_log_success_1"
      ],
      "transformations": [
        {
          "name": "TransformSuccessFactorsToTargetFormat.groovy",
          "type": "groovy",
          "script": "import groovy.json.*\n\ndef jsonSlurper = new JsonSlurper()\ndef input = jsonSlurper.parseText(message.getBody(String.class))\ndef output = [:]\n\n// Create the output structure\noutput.batchProcessingDirectives = [\n    accountID: [\n        username: input.d.results[0].username\n    ],\n    batchProcessingOption: [\n        [\n            name: 'ProcessAll'\n        ]\n    ]\n]\n\n// Process contact information\ndef contacts = []\nif (input.d.results[0].contactInfo && input.d.results[0].contactInfo.results) {\n    input.d.results[0].contactInfo.results.each { contactInfo ->\n        def contact = [\n            contactID: contactInfo.contactId,\n            contactPointList: [\n                [\n                    contactPoint: [\n                        [\n                            type: contactInfo.contactType\n                        ]\n                    ]\n                ]\n            ]\n        ]\n        contacts.add(contact)\n    }\n}\n\noutput.batchContactList = [\n    [\n        contact: contacts\n    ]\n]\n\n// Convert back to JSON\nmessage.setBody(new JsonBuilder(output).toPrettyString())\nreturn message"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "odata_successfactors_1",
          "target": "enricher_sftp_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"odata_successfactors_1\" targetRef=\"enricher_sftp_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_1",
          "source": "enricher_sftp_1",
          "target": "enricher_log_success_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_1\" sourceRef=\"enricher_sftp_1\" targetRef=\"enricher_log_success_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_2",
          "source": "enricher_log_success_1",
          "target": "router_error_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_2\" sourceRef=\"enricher_log_success_1\" targetRef=\"router_error_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_3",
          "source": "router_error_1",
          "target": "enricher_error_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_3\" sourceRef=\"router_error_1\" targetRef=\"enricher_error_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_4",
          "source": "enricher_error_1",
          "target": "sftp_upload_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_4\" sourceRef=\"enricher_error_1\" targetRef=\"sftp_upload_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_5",
          "source": "sftp_upload_1",
          "target": "email_notification_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_5\" sourceRef=\"sftp_upload_1\" targetRef=\"email_notification_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "email_notification_1",
          "target": "script_transform_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"email_notification_1\" targetRef=\"script_transform_1\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}