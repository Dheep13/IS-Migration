{
  "api_name": "Products API",
  "base_url": "/products",
  "endpoints": [
    {
      "method": "GET",
      "path": "/products",
      "purpose": "Retrieves product details based on a product identifier",
      "components": [
        {
          "type": "enricher",
          "name": "Log_Request",
          "id": "enricher_log_request_1",
          "config": {
            "content": "var productId = message.getHeaders().get('productIdentifier');\nvar isValid = message.getProperty('isValidProduct');\nvar logMessage = isValid ? 'Valid product ID: ' + productId : 'Invalid product ID: ' + productId;\nmessage.setProperty('logMessage', logMessage);"
          }
        },
        {
          "type": "odata",
          "name": "Get_Product_Details",
          "id": "odata_get_product_1",
          "config": {
            "address": "${property.HANA_OData_URL}",
            "resource_path": "Products",
            "operation": "Query(GET)",
            "query_options": "$filter=ProductId eq '${header.productIdentifier}'&$select=ProductId,Category,CategoryName,CurrencyCode,DimensionDepth,DimensionHeight,DimensionUnit,DimensionWidth,LongDescription,Name,PictureUrl,Price,QuantityUnit,ShortDescription,SupplierId,Weight,WeightUnit"
          }
        },
        {
          "type": "enricher",
          "name": "Validate_Product_Identifier",
          "id": "enricher_validate_product_1",
          "config": {
            "content": "var productIdentifiers = properties.get('odata.productIdentifiers').split(',');\nvar queryProductId = message.getHeaders().get('productIdentifier');\nvar isValidProduct = productIdentifiers.some(function(id) { return id === queryProductId; });\nmessage.setProperty('isValidProduct', isValidProduct);"
          }
        },
        {
          "type": "groovy_script",
          "name": "Route_By_Validation_Result",
          "id": "groovy_router_1",
          "config": {
            "script": "RouteByValidationResult.groovy"
          }
        },
        {
          "type": "enricher",
          "name": "Format_Error_Response",
          "id": "enricher_error_response_1",
          "config": {
            "content": "var productId = message.getHeaders().get('productIdentifier');\nvar errorJson = '{\"status\": \"error\", \"message\": \"The product identifier ' + productId + ' was not found.\", \"errorCode\": \"PRODUCT_NOT_FOUND\"}';\nmessage.setBody(new String(errorJson));"
          }
        }
      ],
      "sequence": [
        "enricher_validate_product_1",
        "enricher_log_request_1",
        "groovy_router_1",
        "odata_get_product_1"
      ],
      "transformations": [
        {
          "name": "RouteByValidationResult.groovy",
          "type": "groovy",
          "script": "import com.sap.gateway.ip.core.customdev.util.Message;\n\ndef Message processData(Message message) {\n    def isValidProduct = message.getProperty('isValidProduct');\n    \n    if (isValidProduct) {\n        // Route to OData call\n        message.setProperty('routeTo', 'odata');\n    } else {\n        // Route to error response\n        def productId = message.getHeaders().get('productIdentifier');\n        def errorJson = '{\"status\": \"error\", \"message\": \"The product identifier ' + productId + ' was not found.\", \"errorCode\": \"PRODUCT_NOT_FOUND\"}';\n        message.setBody(new String(errorJson));\n        message.setProperty('routeTo', 'error');\n    }\n    \n    return message;\n}"
        }
      ],
      "sequence_flows": [
        {
          "id": "SequenceFlow_Start",
          "source": "enricher_log_request_1",
          "target": "odata_get_product_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_Start\" sourceRef=\"enricher_log_request_1\" targetRef=\"odata_get_product_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_1",
          "source": "odata_get_product_1",
          "target": "enricher_validate_product_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_1\" sourceRef=\"odata_get_product_1\" targetRef=\"enricher_validate_product_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_2",
          "source": "enricher_validate_product_1",
          "target": "groovy_router_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_2\" sourceRef=\"enricher_validate_product_1\" targetRef=\"groovy_router_1\" isImmediate=\"true\"/>"
        },
        {
          "id": "SequenceFlow_End",
          "source": "groovy_router_1",
          "target": "enricher_error_response_1",
          "is_immediate": true,
          "xml_content": "<bpmn2:sequenceFlow id=\"SequenceFlow_End\" sourceRef=\"groovy_router_1\" targetRef=\"enricher_error_response_1\" isImmediate=\"true\"/>"
        }
      ]
    }
  ]
}